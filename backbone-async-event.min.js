/*!
 * https://github.com/jhudson8/backbone-async-event v0.4.0;  MIT license; Joe Hudson<joehud_AT_gmail.com>
 */
!function(n){"function"==typeof define&&define.amd?define(["backbone","underscore"],function(e,t){n(e,t)}):"undefined"!=typeof exports&&"undefined"!=typeof require?module.exports=function(e){n(e,require("underscore"))}:n(Backbone,_)}(function(n,e){var t=n.sync;n.async=e.extend({},n.Events),n.sync=function(r,c,i){function s(n){var e=i[n];i[n]=function(){var t=arguments;e&&e.apply(this,t);var r=o.indexOf(a);r>=0&&o.splice(r,1);var s="success"===n?[n,c,i]:[n,c,t[1],t[2],i];a.trigger.apply(a,s),s.splice(0,0,"complete"),a.trigger.apply(a,s),0===o.length&&c.trigger("async:load-complete")}}i=i||{},i.url||(i.url=e.result(c,"url"));var o=c._pendingAsyncEvents=c._pendingAsyncEvents||[],u=i&&i.event||r,a=e.extend({},n.Events);o.push(a),a.method=r,a.options=i,a.model=c,c.trigger("async",u,a,i),c.trigger("async:"+u,a,i),e.each([n.async,n.asyncHandler],function(n){n&&(n.trigger("async",u,c,a,i),n.trigger("async:"+u,c,a,i))}),s("success"),s("error");var d=i.intercept;if(d){if("function"==typeof d)return d(i);throw"intercept must be function(options)"}t.call(this,r,c,i)},e.each([n.Model,n.Collection],function(n){n.prototype.isLoading=function(){return this._pendingAsyncEvents&&this._pendingAsyncEvents.length>0?this._pendingAsyncEvents:!1}}),n.async.on("async:read",function(n,e){e.on("success",function(){n.hasBeenFetched=!0,n.hadFetchError=!1}),e.on("error",function(){n.hadFetchError=!0})})});